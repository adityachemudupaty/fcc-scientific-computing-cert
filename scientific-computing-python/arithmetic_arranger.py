def arithmetic_arranger(problems, solve=False):	# problems is a list	# if too many problems are passed, then return an error		if len(problems) > 5:		return "Error: Too many problems."		problems_dict = {}	problem_num = range(len(problems))		# check that operators are only + or -		for problem in problems:		ex = problem.split()		print(ex)		if ex[1] != '+' and ex[1] != '-':			# return "Error: Operator must be '+' or '-'."			print("Error: Operator must be + or -.")		# check that operands are actually numbers		try:			int(ex[0])			int(ex[2])		except TypeError:			return "Error: Numbers must contain only digits."		# check that operands are 4 characters max		if (len(ex[0]) >= 5) and (len(ex[2]) >= 5):			return "Error: Numbers cannot be more than four digits."		# store the problems in a dictionary after separating the problem into three parts	#		for i in problem_num:		problems_dict['problem' + str(i)] = problems[i].split()		num_problems = len(problems_dict)		probl_list = [item.split() for item in problems]	first_op = [item.split()[0] for item in problems]	operators = [item.split()[1] for item in problems]	second_op = [item.split()[2] for item in problems]		max_len_list = []		for i in range(len(problems)):		max_len_list.append(([first_op[i], second_op[i]]))	padding = []	for operands in max_len_list:		padding.append(max(operands))							# # create dummy problems until problem 5	# num_problems = len(problems)	# while num_problems < 5:	# 	problems_dict['problem' + str(num_problems)] = ['', '']	# 	num_problems += 1	# 	print(problems_dict)		# arrange the first line	# space = '    '		# line1 = problems_dict['problem0'][0].rjust(5, ' ') + space + problems_dict['problem1'][0].rjust(5, ' ') \	#         + space + problems_dict['problem2'][0].rjust(5, ' ') \	#         + space + problems_dict['problem3'][0].rjust(5, ' ') \	#         + space + problems_dict['problem4'][0].rjust(5, ' ')	#	# line2 = problems_dict['problem0'][1].rjust(4, ' ') + space + problems_dict['problem1'][1].rjust(4, ' ') \	#         + space + problems_dict['problem2'][1].rjust(4, ' ') \	#         + space + problems_dict['problem3'][1].rjust(4, ' ') \	#         + space + problems_dict['problem4'][1].rjust(4, ' ')		line3 = '_____    _____    _____    _____    _____'	# arranged_problems = line1 + '\n' + line2 + '\n' + line3	#	# print(arranged_problems)	# return arranged_problemsarithmetic_arranger(["32 + 8", "1 - 3801", "9999 + 9999", "523 - 49"])